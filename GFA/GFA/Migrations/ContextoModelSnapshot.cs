// <auto-generated />
using System;
using GFA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GFA.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GFA.Models.Conta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("desc_conta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inativo")
                        .HasColumnType("datetime2");

                    b.Property<string>("obs_conta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_conta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("GFA.Models.Jogador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("inativo")
                        .HasColumnType("datetime2");

                    b.Property<string>("mensalista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome_jogador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs_mensalista")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("GFA.Models.Lancamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("dt_baixa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dt_previsao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fk_contaid")
                        .HasColumnType("int");

                    b.Property<int?>("fk_jogadorid")
                        .HasColumnType("int");

                    b.Property<DateTime>("inativo")
                        .HasColumnType("datetime2");

                    b.Property<string>("obs_lancamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("fk_contaid");

                    b.HasIndex("fk_jogadorid");

                    b.ToTable("Lancamentos");
                });

            modelBuilder.Entity("GFA.Models.Parametro", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("desc_parametro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inativo")
                        .HasColumnType("datetime2");

                    b.Property<int>("ponto")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("GFA.Models.Scout", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("assistencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("dt_partida")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fk_jogadorid")
                        .HasColumnType("int");

                    b.Property<string>("fk_parametroid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("gol")
                        .HasColumnType("int");

                    b.Property<DateTime>("inativo")
                        .HasColumnType("datetime2");

                    b.Property<string>("obs_scout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ponto")
                        .HasColumnType("int");

                    b.Property<int>("presenca")
                        .HasColumnType("int");

                    b.Property<string>("resultado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("fk_jogadorid");

                    b.HasIndex("fk_parametroid");

                    b.ToTable("Scouts");
                });

            modelBuilder.Entity("GFA.Models.Lancamento", b =>
                {
                    b.HasOne("GFA.Models.Conta", "fk_conta")
                        .WithMany("Lancamentos")
                        .HasForeignKey("fk_contaid")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("GFA.Models.Jogador", "fk_jogador")
                        .WithMany("Lancamentos")
                        .HasForeignKey("fk_jogadorid")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("fk_conta");

                    b.Navigation("fk_jogador");
                });

            modelBuilder.Entity("GFA.Models.Scout", b =>
                {
                    b.HasOne("GFA.Models.Jogador", "fk_jogador")
                        .WithMany("Scouts")
                        .HasForeignKey("fk_jogadorid")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("GFA.Models.Parametro", "fk_parametro")
                        .WithMany("Scouts")
                        .HasForeignKey("fk_parametroid")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("fk_jogador");

                    b.Navigation("fk_parametro");
                });

            modelBuilder.Entity("GFA.Models.Conta", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("GFA.Models.Jogador", b =>
                {
                    b.Navigation("Lancamentos");

                    b.Navigation("Scouts");
                });

            modelBuilder.Entity("GFA.Models.Parametro", b =>
                {
                    b.Navigation("Scouts");
                });
#pragma warning restore 612, 618
        }
    }
}
